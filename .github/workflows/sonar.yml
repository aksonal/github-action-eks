name: CI for eks deployment

on:
  push:
    branches:
      - main


jobs:
  Run-Sonarqube-Scan:
    name: Sonar Scan
    runs-on: github-action-eks #self-hosted runner label on ec2

    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Sonar Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install npm dependencies
        run: npm install

      - name: Trivy File Scan 
        #tells Trivy to scan the filesystem at the current directory (.) for vulnerabilities and misconfigurations.
        #run: trivy ts . > tricy-file-scan.txt
        uses: aquasecurity/trivy-action@0.28.0
        with: 
          scan-type: 'fs' #tells Trivy to use the filesystem mode.
          scan-ref: '.'  # Same as running `trivy fs .`
          output: trivy-file-scan-report.json

      - name: Upload trivy report as a Github artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-file-system-scan-report
          path: '${{ github.workspace }}/trivy-file-scan-report.json'

      - name: Build Docker image & push to DockerHub
        uses: mr-smithers-excellent/docker-build-push@v4
        with:
          image: sk22tp/react-app-test #docker image name
          tag: latest
          registry: docker.io
          #dockerfile: Dockerfile #not required field
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Run Trivy scanner on Docker image
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'image'
          scan-ref: 'sk22tp/react-app-test:latest'
          output: trivy-image-report.json

      - name: Upload trivy image scan report as a Github artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-image-scan-report
          path: '${{ github.workspace }}/trivy-image-report.json'
